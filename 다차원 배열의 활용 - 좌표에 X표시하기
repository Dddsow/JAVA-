import java.util.*;

class MultiArrEx1{
    public static void main(String [] args){
      final int SIZE = 10;  // 정수 상수 SIZE 10으로 고정
      int x = 0, y = 0;  // x와y축을 나타내는 정수 x,y 0으로 초기화
      
      char[][]board = new char[SIZE][SIZE];   //보드를 나타내는 SIZE*SIZE(10*10) 2차원 배열생성
      byte[][]shipBoard = {
        // 1 2 3 4 5 6 7 8 9
         { 0,0,0,0,0,0,1,0,0}, //1
         { 1,1,1,1,0,0,1,0,0}, //2
         { 0,0,0,0,0,0,1,0,0}, //3
         { 0,0,0,0,0,0,1,0,0}, //4
         { 0,0,0,0,0,0,0,0,0}, //5
         { 1,1,0,1,0,0,0,0,0}, //6
         { 0,0,0,1,0,0,0,0,0}, //7
         { 0,0,0,1,0,0,0,0,0}, //8
         { 0,0,0,0,0,1,1,1,0}, //9
      };   //배의 위치(1)와 바다의 위치(0)를 나타내는 베이스 2차원 배열 생성 
      
      
      for(int i=1;i<SIZE;i++){
          board[0][i] = board[i][0] = (char)(i+'0');  //board의 바깥쪽 라인을 1-9까지 감싸주기 위해서 (행번호와 열번호) board는 char(문자)배열이므로 문자'0'을 더해서 문자 '1-9'까지 저장해준다.
      }
          
      Scanner scanner = new Scanner(System.in); //scanner 을 쓰기 위함.
      
      while(true) {
          System.out.printf("좌표를 입력하세요.(종료는 00)>");
          String input = scanner.nextLine(); // 문자열 input 에다가 좌표를 입력받음.
          
          if(input.length() == 2) { // 문자열의 길이가 두 자리 수라면
              x = input.charAt(0) - '0';  //charAt(n)은 문자열의 n번째 자리를 표시한다.  
              y = input.charAt(1) - '0';  //또한 문자이기 때문에 숫자로 변경해준다.
              
              if(x == 0 && y == 0){
                  break;  //만약 x,y가 둘 다 0이라면 종료한다.
              }
          }
          
          if(input.length()!=2 || x<=0 || x>=SIZE || y<=0 || y>=SIZE){
              System.out.println("잘못된 입력입니다. 다시 입력해주세요."); 
              continue;
          }
          
          board[x][y] = shipBoard[x-1][y-1] == 1 ? 'O' : 'X' ; //삼항연산자 사용 shipboard[x-1][y-1]이 1이라면 board[x][y]에 'O'를 저장 , 틀리다면 'X'를 저장 
          
          for(int i=0;i<SIZE;i++)
              System.out.println(board[i]); //board를 출력 한 뒤 다시 while 문 첫 번째로 이동 후 무한루프 (단, 00을 입력하면 break문으로 while문 탈출 후 종료.
          System.out.println();
      }
   }
}
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         
