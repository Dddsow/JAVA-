//추상 클래스
abstract class Palyer{
    abstract void play(int pos);
    abstract void stop();
}
class AudioPlayer extends Player{
    void play(int pos){}
    void stop(){}
}

abstract class AbstractPlayer extends Player{
    void play(int pos){}
}

//메서드를 사용하는 쪽에서는 메서드가 실제로 어떻게 구현되어있는지 몰라도 메서드의 이름ㅇ과 매개변수 ,리턴타입, 즉 선언부만 알고 있으면 되므로
//내용이 없을지라도 추상메서드를 사용하는 코드를 사용하는 것이 가능하다.

// iii)추상클래스의 작성

//추상화:클래스간의 공통점을 찾아내서 공통의 조상을 만드는 작업
//구체화:상속을 통해 클래스를 구현, 확장하는 작업

//Player라는 추상클래스를 작성
abstract class Player{
    boolean pause;      //일시정지 상태를 저장하기 위한 변수
    int currentPos;     //현재 play되고 있는 위치를 저장하기 위한 변수
    
    Player(){           //추상클래스도 생성자가 있어야 한다.
        pause = false;
        currentPos = 0;
    }
    //지정된 위치에서 재생을 시작하는 기능이 수행되도록 작성되어야 한다.
    abstract void play(int pos);
    //재생을 즉시 멈추는 기능을 수행하도록 작성되어야 한다.
    abstract void stop();
    
    void play(){
        play(currentPos); //추상메서드를 사용할 수 있다.
    }
    void pause(){
        if(pause){ //pause가 true일 때 (정지상태)에서 pause가 호출되면
            pause = false; //pause의 상태를 false로 바꾸고,
            play(currentPos);   //현재의 위치에서 play를 한다.
        }
        else{   //pause가 false일 때 (play상태)에서 pause가 호출되면,
            pause = true; //pause의 상태를 true로 바꾸고
            stop();   //play를 멈춘다
        }
    }
}
 
//이제 Player클래스를 조상으로하는 CDPlayer클래스를 만들어 보자.

class CDPlayer extends Player{
    void play(int currentPos){
        /* 조상의 추상메서드를 구현 */
    }
    void stop(){
        /* 조상의 추상메서드를 구현 */
    }
    
    //CDplayer클래스에 새로 추가로 정의된 멤버
    int currentTrack; //재생중이 트랙
    
    void nextTrack(){
        currentTrack++;
    }
    
    void preTrack(){
        if(currentTrack > 1){
            currentTrack--;
        }
    }
}
//->아무런 내용도 없이 단지 괄호{}만 있어도,추상메서드가 아닌 일반 메서드로 간주되기 때문이다.

class Marine{ //보병
    int x,y;  //현재위치
    void move(int x,int y){ /*지정된 위치로 이동 */}
    void stop() {/*현재위치에 정지*/}
    void stimPack() {/*스팀팩을 사용*/}
}
class Tank{  //탱크
    int x,y;  //현재위치
    void move(int x,int y){ /*지정된 위치로 이동 */}
    void stop(){/*현재위치에 정지*/}
    void changeMode(){/*모드 변경*/}
}
class Dropship{ //수송선
    int x,y;  //현재위치
    void move(int x,int y){ /*지정된 위치로 이동 */}
    void stop(){/*현재위치에 정지*/}
    void load(){/*지정된 대상을 태운다*/}
    void unload(){/*지정된 대상을 내린다*/}
}

//위에 클래스들을 공통부분을 뽑아내어 하나의 클래스로 만들고 , 이 클래스로부터 상속받도록 변경해보자.

abstract class Unit{
    int x,y;
    abstract void move(int x,int y);
    void stop(){/* 현재 위치에 정지 */}
}

class Marine extends Unit{
    void move(int x,int y){} 
    void stimPack() {/*스팀팩을 사용*/}
}
class Tank extends Unit{
    void move(int x,int y){} 
    void changeMode(){/*모드 변경*/}
}
class Dropship extends Unit{
    void move(int x,int y){} 
    void load(){/*지정된 대상을 태운다*/}
    void unload(){/*지정된 대상을 내린다*/}
}


